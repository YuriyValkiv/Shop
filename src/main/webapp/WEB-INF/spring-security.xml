<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:util="http://www.springframework.org/schema/util"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd

		http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <beans:import resource="hibernate-context.xml"/>

       <http pattern="/resources" security="none" />


       <http auto-config="true"  use-expressions="true">
              <intercept-url pattern="/" access="permitAll"/>
              <intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>

              <form-login login-page="/#login-modal"
                          authentication-failure-url="/"
                          default-target-url="/"/>

              <!--<access-denied-handler error-page="/denied"/>-->

              <!--<logout invalidate-session="true"-->
                      <!--logout-success-url="/logout/success"-->
                      <!--logout-url="/logout"/>-->
       </http>

    <!-- Select users and user_roles from database -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
                                       "SELECT users_email, users_password, enabled FROM Users WHERE users_email=?"
                               authorities-by-username-query=
                                       "SELECT users_email, users_role FROM Users
						WHERE users_email = ? " />
            <password-encoder hash="md5"/>
        </authentication-provider>
    </authentication-manager>
</beans:beans>